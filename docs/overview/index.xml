<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on Casquatch</title>
    <link>http://tmobile.github.io/casquatch/overview/</link>
    <description>Recent content in Overview on Casquatch</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 11 Jul 2019 10:48:24 -0700</lastBuildDate>
    
	<atom:link href="http://tmobile.github.io/casquatch/overview/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Overview</title>
      <link>http://tmobile.github.io/casquatch/overview/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tmobile.github.io/casquatch/overview/overview/</guid>
      <description>Project Casquatch is a java abstraction layer for the Cassandra database allowing developers to interact with the database through generated POJOs via simple get, save, delete, procedures without writing a single line of CQL.</description>
    </item>
    
    <item>
      <title>License</title>
      <link>http://tmobile.github.io/casquatch/overview/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tmobile.github.io/casquatch/overview/license/</guid>
      <description> We recognize that there is a wide range of platforms, and T-Mobile can&amp;rsquo;t address them all. This is why we open sourced Casquatch &amp;ndash; we hope the community will be able to expand how Casquatch is used. As with any tool, consult with your IT department before using in production.
 All code samples included are for demonstration purposes only.
 Licensed under Apache 2.0
  </description>
    </item>
    
    <item>
      <title>Concepts</title>
      <link>http://tmobile.github.io/casquatch/overview/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tmobile.github.io/casquatch/overview/concepts/</guid>
      <description>CasquatchDao CasquatchDao is your main interface to the database and provides an extensive api. This can be configured through a Builder, Autowired with Spring, or loaded through a configuration file.
Casquatch Entity The CasquatchEntity corresponds directly to a table. Fields and naming are translated through CasquatchNamingConvention to CQL equivalents. At minimum an entity will look like the following: @CasquatchEntity @Getter @Setter @NoArgsConstructor public class TableName extends AbstractCasquatchEntity { @PartitionKey private Integer keyOne; @ClusteringColumn(1) private Integer keyTwo; private String colOne; private String colTwo; }</description>
    </item>
    
  </channel>
</rss>